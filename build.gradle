allprojects {
    group = 'com.creative.commons'
    version = '1.0'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'

    repositories {
        mavenCentral()
    }
    ext {
        junitVersion = "4.12"
        mockitoVersion = "1.10.19"
        hamcrestVersion = "1.3"
        checkerHome = System.getenv("HOME") + "/software/checker-framework-1.9.1"
    }

    dependencies {
        testCompile("junit:junit:${junitVersion}") {
            exclude group: 'org.hamcrest', module: 'hamcrest-core'
        }
        testCompile("org.mockito:mockito-core:${mockitoVersion}") {
            exclude group: 'org.hamcrest', module: 'hamcrest-core'
        }
        testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")
        compile("com.google.guava:guava:18.0")
        compile("org.apache.commons:commons-lang3:3.4")
        compile("org.checkerframework:checker-qual:1.9.1")
        compile("org.checkerframework:checker:1.9.1")
    }

    compileJava.options*.compilerArgs = [
            "-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
            "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
            "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
            "-Xlint:try", "-Xlint:fallthrough", "-Xlint:rawtypes", "-Xlint:deprecation",
            "-Xlint:unchecked", "-Xlint:-options", "-Werror"
    ]

    compileTestJava.options*.compilerArgs = [
            "-Xlint:serial", "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
            "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
            "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
            "-Xlint:try", "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
            "-Xlint:-unchecked", "-Xlint:-options"]

    compileJava {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }

    compileTestJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.compilerArgs += "-parameters"
    }

    tasks.withType(JavaCompile).all { JavaCompile compile ->
        compile.options.debug = true
        compile.options.compilerArgs = [
                '-source','8',
                '-target','8',
                '-version',
                '-implicit:class',
                '-AprintErrorStack',
                '-AprintAllQualifiers',
                '-Awarns',
                //'-proc:none',
                '-processor', 'org.checkerframework.checker.nullness.NullnessChecker'
        ]
        options.fork = true
        options.forkOptions.executable = "$checkerHome/checker/bin/javac"
    }
}


project("logger.api") {
}

project("logger.impl") {
    dependencies {
        compile("commons-logging:commons-logging:1.2")
        //compile("log4j:log4j:1.2.17")
        compile(project(":logger.api"))
    }
}

configurations {
    log4m {
        description = 'log for me'
        visible = false
    }
}
configurations.log4m {
    resolutionStrategy {
        failOnVersionConflict()
        force('junit:junit:4.11')
        cacheDynamicVersionsFor(0, 'seconds')
    }
}

configurations.compile.resolutionStrategy {
    cacheChangingModulesFor(0, 'seconds')
}

dependencies {
    compile("org.apache.logging.log4j:log4j-api:2.3")
    compile("org.apache.logging.log4j:log4j-core:2.3")
    compile("log4j:log4j:1.2.17")
    compile("org.slf4j:slf4j-api:1.7.12")
    compile(project(":logger.impl"))
}

buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}